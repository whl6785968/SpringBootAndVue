<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandalen.jwts.dao.MenuMapper" >
  <resultMap id="BaseResultMap" type="com.sandalen.jwts.entity.Menu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="VARCHAR" />
    <result column="requireAuth" property="requireauth" jdbcType="INTEGER" />
    <!--<collection property="roles" ofType="com.sandalen.jwts.entity.Role">-->
      <!--<id column="id" property="id"></id>-->
      <!--<result column="role_name" property="roleName"></result>-->
    <!--</collection>-->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, url, path, component, parentId, requireAuth
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sandalen.jwts.entity.MenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sandalen.jwts.entity.MenuExample" >
    delete from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sandalen.jwts.entity.Menu" >
    insert into menu (id, url, path, 
      component, parentId, requireAuth
      )
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{component,jdbcType=VARCHAR}, #{parentid,jdbcType=VARCHAR}, #{requireauth,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sandalen.jwts.entity.Menu" >
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="component != null" >
        component,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="requireauth != null" >
        requireAuth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="requireauth != null" >
        #{requireauth,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sandalen.jwts.entity.MenuExample" resultType="java.lang.Integer" >
    select count(*) from menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update menu
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null" >
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null" >
        parentId = #{record.parentid,jdbcType=VARCHAR},
      </if>
      <if test="record.requireauth != null" >
        requireAuth = #{record.requireauth,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update menu
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      parentId = #{record.parentid,jdbcType=VARCHAR},
      requireAuth = #{record.requireauth,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sandalen.jwts.entity.Menu" >
    update menu
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="requireauth != null" >
        requireAuth = #{requireauth,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sandalen.jwts.entity.Menu" >
    update menu
    set url = #{url,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=VARCHAR},
      requireAuth = #{requireauth,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="TstMap" type="com.sandalen.jwts.entity.Menu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="VARCHAR" />
    <result column="requireAuth" property="requireauth" jdbcType="INTEGER" />
    <collection property="roles" ofType="com.sandalen.jwts.entity.Role">
      <id column="rid" property="id"></id>
      <result column="rname" property="roleName"></result>
    </collection>
  </resultMap>
  <select id="selectAll" resultMap="TstMap">
    select m.*,r.id as rid,r.role_name as rname from menu m,role r,menu_role mr where m.id = mr.menu_id and mr.role_id = r.id;
  </select>

  <resultMap id="TstMap2" type="com.sandalen.jwts.entity.Menu">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="path" property="path" jdbcType="VARCHAR"/>
    <result column="component" property="component" javaType="java.lang.Object"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="iconCls" property="iconCls" jdbcType="VARCHAR"/>
    <result column="parentId" property="parentid" jdbcType="INTEGER"/>
    <collection property="children" ofType="com.sandalen.jwts.entity.Menu">
      <id column="id2" property="id"/>
      <result column="path2" property="path" jdbcType="VARCHAR"/>
      <result column="component2" property="component" jdbcType="VARCHAR"/>
      <result column="name2" property="name" jdbcType="VARCHAR"/>
      <result column="iconCls2" property="iconCls" jdbcType="VARCHAR"/>
      <collection property="children" ofType="com.sandalen.jwts.entity.Menu">
        <id column="id3" property="id"/>
        <result column="name3" property="name" jdbcType="VARCHAR"/>
      </collection>
    </collection>
  </resultMap>


  <select id="getMenuByUserId" resultMap="TstMap2" parameterType="java.lang.Integer">
    select m1.id as id,m1.path as path,m1.component as component,m1.name as name,m1.iconCls as iconCls,m1.parentId as parentId,m2.path as path2,m2.component as component2,m2.name as name2,m2.iconCls as iconCls2  from menu m1,menu m2 where m1.id = m2.parentId and m1.id!=1 and m2.id in (select mr.menu_id from user_role ur,menu_role mr where ur.role_id = mr.role_id and ur.user_id=#{id});
  </select>
</mapper>